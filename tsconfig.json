{

  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    "declaration": false,
    "emitDecoratorMetadata": true,
    "experimentalDecorators": true,

    /* Language and Environment */
    "target": "es2020" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,

    /* Modules */
    "module": "commonjs" /* Specify what module code is generated. */,                               /* Allow multiple folders to be treated as one when resolving modules. */
    "typeRoots": ["./node_modules/@types", "./types"],                                  /* Specify multiple folders that act like './node_modules/@types'. */
    "rootDir": "./",                                  /* Specify the root folder within your source files. */
    "moduleResolution": "node",                       /* Specify how TypeScript looks up a file from a given module specifier. */
    "baseUrl": "./",                                  /* Specify the base directory to resolve non-relative module names. */
 
    /* JavaScript Support */
    // "allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,
    "checkJs": true,                                  /* Enable error reporting in type-checked JavaScript files. */
    "maxNodeModuleJsDepth": 2,                        /* Specify the maximum folder depth used for checking JavaScript files from 'node_modules'. Only applicable with 'allowJs'. */

    /* Emit */
    "sourceMap": false,                                  /* Specify a file that bundles all outputs into one JavaScript file. If 'declaration' is true, also designates a file that bundles all .d.ts output. */
    "outDir": "./dist" /* Specify an output folder for all emitted files. */,
    "sourceRoot": "./",                                 /* Specify the root path for debuggers to find the reference source code. */

    /* Interop Constraints */
     "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    /* Type Checking */
    "strict": true /* Enable all strict type-checking options. */,

    /* Completeness */
  //  "skipLibCheck": true /* Skip type checking all .d.ts files. */
  },
  "exclude": ["./dist/**/*", "./node_modules", "./src/**/*.test.ts", "./src/**/*.spec.ts", "./src/**/*.mjs"]
}
